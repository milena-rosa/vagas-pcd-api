// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "filteredRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  COMPANY
  CANDIDATE
  GOVERNMENT
}

enum DisabilityType {
  PHYSICAL
  HEARING
  VISUAL
  MENTAL
  MULTIPLE
  ANY
}

enum Location {
  REMOTE
  HYBRID
  ON_SITE
}

model User {
  user_id       String   @id @default(uuid())
  email         String   @unique
  password_hash String
  role          Role     @default(CANDIDATE)
  created_at    DateTime @default(now())

  candidate      Candidate?
  company        Company?
  governmentUser GovernmentUser?

  @@map("users")
}

model Candidate {
  candidate_id           String  @unique
  name                   String
  zipCode                String
  street                 String
  number                 String
  complement             String?
  neighborhood           String
  city                   String
  state                  String
  phone                  String
  linkedin               String?
  professionalExperience String?
  educationalBackground  String?
  skills                 String?

  user         User          @relation(fields: [candidate_id], references: [user_id])
  applications Application[]

  @@map("candidates")
}

model Company {
  company_id String @unique

  cnpj       String  @unique
  about      String?
  linkedin   String?
  name       String?
  phone      String?
  street     String?
  zip_code   String?
  number     String?
  complement String?
  city       String?
  state      String?

  jobs Job[]
  user User  @relation(fields: [company_id], references: [user_id])

  @@map("companies")
}

model GovernmentUser {
  user_id String @unique

  user User @relation(fields: [user_id], references: [user_id])

  @@map("government_users")
}

model Job {
  job_id          String         @id @default(uuid())
  title           String
  description     String
  role            String
  location        Location       @default(ON_SITE)
  salary          Float
  perks           String
  linkedin        String?
  disability_type DisabilityType
  created_at      DateTime       @default(now())
  closed_at       DateTime?

  company_id String
  company    Company @relation(fields: [company_id], references: [company_id])

  applications Application[]

  @@map("jobs")
}

model Application {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())

  candidate_id String
  candidate    Candidate @relation(fields: [candidate_id], references: [candidate_id])

  job_id String
  job    Job    @relation(fields: [job_id], references: [job_id])

  @@map("applications")
}
